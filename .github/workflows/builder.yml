name: Universal Kernel Builder

on:
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Jakarta
      OUT_DIR: out

    steps:
      - name: üì¶ Checkout Repo
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Environment
        run: |
          echo "ANYKERNEL_SOURCE=$(cat config.env | grep -w "ANYKERNEL_SOURCE" | head -n1 | cut -d "=" -f2)" >> $GITHUB_ENV
          echo "ANYKERNEL_SOURCE_BRANCH=$(cat config.env | grep -w "ANYKERNEL_SOURCE_BRANCH" | head -n1 | cut -d "=" -f2)" >> $GITHUB_ENV
          echo "KERNEL_SOURCE=$(cat config.env | grep -w "KERNEL_SOURCE" | head -n1 | cut -d "=" -f2)" >> $GITHUB_ENV
          echo "KERNEL_SOURCE_BRANCH=$(cat config.env | grep -w "KERNEL_SOURCE_BRANCH" | head -n1 | cut -d "=" -f2)" >> $GITHUB_ENV
          echo "KERNEL_CONFIG=$(cat config.env | grep -w "KERNEL_CONFIG" | head -n1 | cut -d "=" -f2)" >> $GITHUB_ENV
          echo "BUILD_ARGS=$(cat config.env | grep -w "BUILD_ARGS" | head -n1 | cut -d ":" -f2)" >> $GITHUB_ENV

      - name: üõ†Ô∏è Pull Toolchain
        run: |
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 aarch64-linux-android-4.9
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 arm-linux-androideabi-4.9
          mkdir clang && curl -s https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android14-dev/clang-r487747c.tar.gz -RLO && tar -C clang/ -xf clang-*.tar.gz

      - name: ‚è±Ô∏è Pull Kernel Source
        run: |
          git clone --depth=1 ${{ env.KERNEL_SOURCE }} -b ${{ env.KERNEL_SOURCE_BRANCH }} kernel-source

      - name: üß™ Build Kernel
        run: |
          export KBUILD_BUILD_USER="lynx@workspace"
          export KBUILD_BUILD_HOST="workspace"
          export PATH=$GITHUB_WORKSPACE/clang/bin:${PATH}
          args="ARCH=arm64 \
                O=../out \
                ${{ env.BUILD_ARGS }} \
                CLANG_TRIPLE=aarch64-linux-gnu- \
                CROSS_COMPILE=$GITHUB_WORKSPACE/aarch64-linux-android-4.9/bin/aarch64-linux-android- \
                CROSS_COMPILE_ARM32=$GITHUB_WORKSPACE/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-"
          cd kernel-source
          make ${args} ${{ env.KERNEL_CONFIG }}
          make -j$(nproc) ${args}

      - name: üì¶ Package Kernel with AnyKernel3
        run: |
          git clone --depth=1 ${{ env.ANYKERNEL_SOURCE }} -b ${{ env.ANYKERNEL_SOURCE_BRANCH }} AnyKernel3
          rm -rf AnyKernel3/.git* AnyKernel3/LICENSE AnyKernel3/README.md
          IMG_PATH="out/arch/arm64/boot"
          for img in Image.gz-dtb Image-dtb Image.gz Image; do
            if [[ -f $IMG_PATH/$img ]]; then
              cp $IMG_PATH/$img AnyKernel3/$img
              break
            fi
          done
          if [[ -f $IMG_PATH/dtbo.img ]]; then
            cp $IMG_PATH/dtbo.img AnyKernel3/dtbo.img
          fi

      - name: ‚òÅÔ∏è Upload Kernel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: output_kernel
          path: AnyKernel3/*
