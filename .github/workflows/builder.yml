name: Universal Kernel Builder

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'URL source kernel (e.g., https://github.com/lynxdevproject/kernel-begonia)'
        required: true
        default: 'https://github.com/lynxdevproject/kernel-begonia'
      branch:
        description: 'Branch to build (e.g., main, upstream-v6.1)'
        required: true
        default: 'main'
      codename:
        description: 'Device codename (e.g., begonia)'
        required: true
        default: 'begonia'
      defconfig:
        description: 'Kernel defconfig (e.g., begonia_user_defconfig)'
        required: true
        default: 'begonia_user_defconfig'
      anykernel:
        description: 'Use AnyKernel3 packaging? (true/false)'
        required: true
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Jakarta
      OUT_DIR: out

    steps:
      - name: ⏱️ Sync Kernel Source
        run: |
          git clone --depth=1 -b "${{ github.event.inputs.branch }}" "${{ github.event.inputs.source_repo }}" kernel
          cd kernel

      - name: 🧰 Setup Dependencies
        run: |
          sudo apt update && sudo apt install -y bc bison flex build-essential libssl-dev libncurses-dev ccache clang

      - name: 🔧 Setup Toolchain
        run: |
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_clang_host_linux-x86 lineage-clang

      - name: ⚙️ Compile Kernel
        run: |
          cd kernel
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-android-
          export PATH="${GITHUB_WORKSPACE}/lineage-clang/bin:${PATH}"
          mkdir -p $OUT_DIR
          make O=$OUT_DIR ${{ github.event.inputs.defconfig }}
          make O=$OUT_DIR -j$(nproc) 2>&1 | tee ../build.log

      - name: 📦 Package with AnyKernel (Optional)
        if: ${{ github.event.inputs.anykernel == 'true' }}
        run: |
          git clone --depth=1 https://github.com/osm0sis/AnyKernel3 anykernel
          cp out/Image.gz-dtb anykernel/
          cd anykernel
          zip -r ReogKernel-${{ github.event.inputs.codename }}.zip *

      - name: ☁️ Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ReogKernel-${{ github.event.inputs.codename }}
          path: |
            build.log
            out/Image.gz-dtb
            anykernel/*.zip
